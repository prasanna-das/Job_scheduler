{% extends "userbase.html" %}
{% load admin_urls %}
{% load bootstrap3 %}
{% load staticfiles %}
{% block title %}Dashboard{% endblock %}
{% block extraHeader %}




{% endblock %}

{% block content %}
    <style type="text/css">
    input[type="file"]{
    color: transparent;
}
     #pageno {
    font-weight: italic;
        font-size: 15px;
         color: blue;

         padding:3px 3px;
    }
    .nextpage {
    background-color: #008CBA;
    border: none;
    color: white;
    padding: 9px 10px;
    text-align: center;
    text-decoration: none;
    display: inline-block;
    font-size: 16px;
    margin: 4px 2px;
    cursor: pointer;
    border-radius: 25px;
}

    }
       </style>
<div id="page-wrapper" class="gray-bg" style="color:black;min-height:287px;">
    <div class="row border-bottom">
            <div class="jumbotron">
                <div class="container" style="background-color: #f3f3f4">
                    <h2><b>Software Manager</b></h2>

                    <p>Use this page to upload your files that will be used to test Delta Compression algorithms.</p>
                </div><!-- /.container -->
            </div><!-- /.jumbotron -->
     </div>


        {% csrf_token %}
        <div class="row   border-bottom white-bg page-heading">
          <!--<div  class=" wrapper border-bottom  page-heading"  >-->
                <h4 style="background-color:grey; text-align: center; padding: 5px; width: 98%;" >UPLOAD NEW FILE</h4>
                <label for="name" >File Name : </label>
                   <input id="name" type="text" name="name" /><br><br>
                <label for="version">Version : </label>
                <input id="version" type="text" name="version" style="margin-left:16px;"/><br><br>

                <input id="software_upload" type="file" name="the_file" title='  '/>
                <button id="up_btn" >Upload</button>
                <input id="init_data" type="hidden" value = "{{init_data}}" />
                <input id="type" type="hidden" value = "{{type}}" />

                <p id="progress"></p>

                <div id="myProgress">
                  <div id="myBar"></div>
                </div>

                <div id="messages">

                <!--</div>-->
                </div>
             </div>
</br></br>


<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-content text-center p-md">

                <!--<p class="m-b-xs"><strong>Chat with Monica and Sandra</strong></p>-->
               <h4 style="background-color:grey; text-align: center; padding: 5px; width: 98%; " >LIST OF AVAILABLE FILES</h4>
               <div id="dynamictable"  class="table-responsive  " style="background-color:White;">

                </div>
            </div>
        </div>
    </div>
</div> </div>



    <script type="text/javascript">


var current_page = 1;
var records_per_page = 5;
var objJson = null
var count=1;
var decr = 0;
var last_count = 1;
var cnt = 1;
type = document.getElementById('type').value;

if (type == "initial"){
    init_data = document.getElementById('init_data').value;

    outputdata = eval(init_data);
    document.getElementById('software_upload').value = "";
    //objJson = out_data;
    //displaydata(objJson);

    $('#dynamictable').empty();
    var htmlobj =  $('#dynamictable').append('<table id="fileinfo" class="table table-striped table-bordered table-hover " cellspacing="0" width="100%"></table>');
    var table = $('#dynamictable').children();

    var count = 1;
    table.append("<thead><tr><th>S.No</th><th>ID</th><th>Title</th><th>Version</th><th>Size</th><th>Created On</th><th></th></tr></thead><tbody>");
    $.each(outputdata, function(){
       table.append("<tr id="+this.id+"><td>"+count+"</td><td>"+this.id+"</td><td>"+this.title+"</td><td>"+this.version+"</td><td>"+humanFileSize(this.file_size)+"</td><td>"+this.created+"</td><td>"+"<button id="+this.id+" class=" +"delbtn" +" onclick = 'delete_row(this)' >delete</button>"+"</td></tr>");
       count++;
    });
    table.append("</tbody>");
    dataobj = $('#fileinfo').DataTable();
}

    function displaydata(outputdata) {

        if (cnt == 1) {
            dataobj = $('#fileinfo').DataTable();
	  }
	  cnt++;
     }


       function delete_row(obj){
         id = obj.id
            $.ajax({
                    type: "POST",
                    url: "{% url 'delete_file' %}",
                    async:true,
                    data: {
                        csrfmiddlewaretoken: csrf,
                        job_id: id,
                        },
                    dataType: "json",
                    success: function (data) {
                        dataobj.rows('tr#'+id).remove().draw();
                    },
                    error: function (request, error) {
                        console.log(arguments);
                        alert(" Can't do because: " + error);
                    },
            });
        }




       var md5 = "",
        csrf = $("input[name='csrfmiddlewaretoken']")[0].value,
        form_data = [{"name": "csrfmiddlewaretoken", "value": csrf}];

        function calculate_md5(file, chunk_size) {
            var slice = File.prototype.slice || File.prototype.mozSlice || File.prototype.webkitSlice,
                    chunks = chunks = Math.ceil(file.size / chunk_size),
                    current_chunk = 0,
                    spark = new SparkMD5.ArrayBuffer();
            window.file_size = file.size;
            function onload(e) {
                spark.append(e.target.result);  // append chunk
                current_chunk++;
                if (current_chunk < chunks) {
                    read_next_chunk();
                } else {
                    md5 = spark.end();
                }
            };

            function read_next_chunk() {
                var reader = new FileReader();
                reader.onload = onload;
                var start = current_chunk * chunk_size,
                        end = Math.min(start + chunk_size, file.size);
                reader.readAsArrayBuffer(slice.call(file, start, end));
            };
            read_next_chunk();
            }

            function humanFileSize(size) {
                var i = Math.floor( Math.log(size) / Math.log(1024) );
                return ( size / Math.pow(1024, i) ).toFixed(2) * 1 + ' ' + ['B', 'kB', 'MB', 'GB', 'TB'][i];
            };

        //function start(){

        $("#software_upload").fileupload({
            url: "{% url 'api_chunked_upload' %}",
            dataType: "json",
            maxChunkSize: 256000, // Chunks of 100 kB
            formData: form_data,
            add: function (e, data) {
                // Called before starting upload
                flag = 2;
                 filename = document.getElementById('name').value;
                                uploadedfile = data.files[0].name;


         version = document.getElementById('version').value;
         if (! filename ||  ! version ) {
           alert("please select File name or the version");
           return false
         }
        if (form_data[1]) {
            form_data.splice(1, 1);
        }
        $.ajax({
			url:'verify_duplicate_file/',
			data:{},
			async:false,
			success: function(output) {

				filelist = eval("("+output+")");

                    var titles = filelist[0];
                    var filenames = filelist[1];

                 if (titles == undefined){alert("No Files Uploaded!!!");}
				else{
					var titles = jQuery.unique(titles);
					for(var i = 0; i < titles.length; i++) {

						 if ( titles[i] == filename ) {
						     flag =1;

                          }
					}


				}

				if (filenames == undefined){alert("No Files Uploaded!!!");}
                else{
                    var filenames = jQuery.unique(filenames);
                    for(var i = 0; i < filenames.length; i++) {
                         if ( filenames[i] == uploadedfile ) {
                            if (flag != 1) {
                                flag =3;
                            }
                          }
                    }
                 }
			}
		});//ajax close
		        if (flag == 1) {
		         alert("File Title already exist, Please choose a new File Title");
		         data.data = null ;
		         return false;
		         }
                else if (flag == 3) {
		         alert("File already exist in uploaded list, Please upload a new file");
		         data.data = null ;
		         return false;
		         }

                $("#messages").empty();
                // If this is the second file you're uploading we need to remove the
                // old upload_id and just keep the csrftoken (which is always firstop0-=
                calculate_md5(data.files[0], 100000);  // Again, chunks of 100 kB
                $("#up_btn").off('click').on('click', function () {
                       filename = document.getElementById('name').value;
                       version = document.getElementById('version').value;

                      if (! filename ||  ! version ) {
                            alert("please select File name or the version");
                            return false
                       }
                      if (flag == 1) {
                      data.abort();
                     }
                      else {
                      data.submit();
                      }
                });
            },
            chunkdone: function (e, data) { // Called after uploading each chunk
                if (form_data.length < 2) {
                    form_data.push(
                            {"name": "upload_id", "value": data.result.upload_id}
                    );
                }

                var elem = document.getElementById("myBar");
                var progress = parseInt(data.loaded / data.total * 100.0, 10);
                elem.style.width = progress + "%";

                //var progress = parseInt(data.loaded / data.total * 100.0, 10);
               // $("#progress").text(Array(progress).join("=") + "> " + progress + "%");


            },
            done: function (e, data) { // Called when the file has completely uploaded
                $.ajax({
                    type: "POST",
                    url: "{% url 'api_chunked_upload_complete' %}",
                    data: {
                        csrfmiddlewaretoken: csrf,
                        upload_id: data.result.upload_id,
                        md5: md5,
                        name : document.getElementById('name').value,
                        version: document.getElementById('version').value,
                        size: file_size,
                        },
                     dataType: "json",
                     success: function (data) {
                             document.getElementById('name').value = "";
                             document.getElementById('version').value = "";
                             document.getElementById('software_upload').value = "";

                            var elem = document.getElementById("myBar");
                            elem.style.width = 100+"%";
                            $("#messages").append($('<p>').text(JSON.stringify(data.message)));

                            $(dynamictable).empty();
                            out_data = data.output_list;
                            objJson = out_data;
                            <!--alert(objJson);-->
                             <!--dataobj.row.add( [ {-->
                                        <!--"S.No" : 100,-->
                                        <!--"ID" : objJson.id,-->
                                        <!--"Title" : objJson.title,-->
                                        <!--"Version" : objJson.version,-->
                                        <!--"Size" : objJson.filesize,-->
                                    <!--"Created On" : objJson.created-->
                                   <!--} ] ).draw(false);-->

                             window.location.reload(true)
                            data.data = null;

                     }
                });
              },
        });


    </script>
{% endblock %}